{
  "info": {
    "group": "SYSTEM", 
    "description": "Native crash logging functions and constants.", 
    "namespace": "crash", 
    "brief": "Crash API documentation", 
    "file": "", 
    "path": "", 
    "name": "Crash"
  }, 
  "elements": [
    {
      "replaces": "", 
      "description": "Performs the same steps as if a crash had just occured but\nallows the program to continue.\nThe generated dump can be read by crash.load_previous", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "writes crash dump", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.write_dump"
    }, 
    {
      "replaces": "", 
      "description": "Crashes occuring before the path is set will be stored to a default engine location.", 
      "parameters": [
        {
          "doc": "file path to use", 
          "name": "path", 
          "types": [
            "string"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "sets the file location for crash dumps", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.set_file_path"
    }, 
    {
      "replaces": "", 
      "description": "The crash dump will be removed from disk upon a successful\nload, so loading is one-shot.", 
      "parameters": [], 
      "returnvalues": [
        {
          "doc": "handle to the loaded dump, or nil if no dump was found", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }
      ], 
      "notes": [], 
      "brief": "loads a previously written crash dump", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.load_previous"
    }, 
    {
      "replaces": "", 
      "description": "releases a previously loaded crash dump", 
      "parameters": [
        {
          "doc": "handle to loaded crash dump", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "releases a previously loaded crash dump", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.release"
    }, 
    {
      "replaces": "", 
      "description": "Store a user value that will get written to a crash dump when\na crash occurs. This can be user id:s, breadcrumb data etc.\nThere are 32 slots indexed from 0. Each slot stores at most 255 characters.", 
      "parameters": [
        {
          "doc": "slot index. 0-indexed", 
          "name": "index", 
          "types": [
            "number"
          ]
        }, 
        {
          "doc": "string value to store", 
          "name": "value", 
          "types": [
            "string"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "stores user-defined string value", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.set_user_field"
    }, 
    {
      "replaces": "", 
      "description": "The function returns a table containing entries with sub-tables that\nhave fields 'name' and 'address' set for all loaded modules.", 
      "parameters": [
        {
          "doc": "crash dump handle", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }
      ], 
      "returnvalues": [
        {
          "doc": "module table", 
          "name": "modules", 
          "types": [
            "table"
          ]
        }
      ], 
      "notes": [], 
      "brief": "get all loaded modules from when the crash occured", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.get_modules"
    }, 
    {
      "replaces": "", 
      "description": "reads user field from a loaded crash dump", 
      "parameters": [
        {
          "doc": "crash dump handle", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }, 
        {
          "doc": "user data slot index", 
          "name": "index", 
          "types": [
            "number"
          ]
        }
      ], 
      "returnvalues": [
        {
          "doc": "user data value recorded in the crash dump", 
          "name": "value", 
          "types": [
            "string"
          ]
        }
      ], 
      "notes": [], 
      "brief": "reads user field from a loaded crash dump", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.get_user_field"
    }, 
    {
      "replaces": "", 
      "description": "reads a system field from a loaded crash dump", 
      "parameters": [
        {
          "doc": "crash dump handle", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }, 
        {
          "doc": "", 
          "name": "index", 
          "types": [
            "number] system field enum. Must be less than [ref:crash.SYSFIELD_MAX"
          ]
        }
      ], 
      "returnvalues": [
        {
          "doc": "value recorded in the crash dump, or nil if it didn't exist", 
          "name": "value", 
          "types": [
            "string"
          ]
        }
      ], 
      "notes": [], 
      "brief": "reads a system field from a loaded crash dump", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.get_sys_field"
    }, 
    {
      "replaces": "", 
      "description": "read signal number from a crash report", 
      "parameters": [
        {
          "doc": "crash dump handle", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }
      ], 
      "returnvalues": [
        {
          "doc": "signal number", 
          "name": "signal", 
          "types": [
            "number"
          ]
        }
      ], 
      "notes": [], 
      "brief": "read signal number from a crash report", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.get_signum"
    }, 
    {
      "replaces": "", 
      "description": "A table is returned containing the addresses of the call stack.", 
      "parameters": [
        {
          "doc": "crash dump handle", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }
      ], 
      "returnvalues": [
        {
          "doc": "table containing the backtrace", 
          "name": "backtrace", 
          "types": [
            "table"
          ]
        }
      ], 
      "notes": [], 
      "brief": "read backtrace recorded in a loaded crash dump", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.get_backtrace"
    }, 
    {
      "replaces": "", 
      "description": "The format of read text blob is platform specific\nand not guaranteed\nbut can be useful for manual inspection.", 
      "parameters": [
        {
          "doc": "crash dump handle", 
          "name": "handle", 
          "types": [
            "number"
          ]
        }
      ], 
      "returnvalues": [
        {
          "doc": "string with the platform specific data", 
          "name": "blob", 
          "types": [
            "string"
          ]
        }
      ], 
      "notes": [], 
      "brief": "read text blob recorded in a crash dump", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "crash.get_extra_data"
    }, 
    {
      "replaces": "", 
      "description": "engine version as release number", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "engine version as release number", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_ENGINE_VERSION"
    }, 
    {
      "replaces": "", 
      "description": "engine version as hash", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "engine version as hash", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_ENGINE_HASH"
    }, 
    {
      "replaces": "", 
      "description": "device model as reported by sys.get_sys_info", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "device model as reported by sys.get_sys_info", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_DEVICE_MODEL"
    }, 
    {
      "replaces": "", 
      "description": "device manufacturer as reported by sys.get_sys_info", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "device manufacturer as reported by sys.get_sys_info", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_MANUFACTURER"
    }, 
    {
      "replaces": "", 
      "description": "system name as reported by sys.get_sys_info", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "system name as reported by sys.get_sys_info", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_SYSTEM_NAME"
    }, 
    {
      "replaces": "", 
      "description": "system version as reported by sys.get_sys_info", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "system version as reported by sys.get_sys_info", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_SYSTEM_VERSION"
    }, 
    {
      "replaces": "", 
      "description": "system language as reported by sys.get_sys_info", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "system language as reported by sys.get_sys_info", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_LANGUAGE"
    }, 
    {
      "replaces": "", 
      "description": "system device language as reported by sys.get_sys_info", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "system device language as reported by sys.get_sys_info", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_DEVICE_LANGUAGE"
    }, 
    {
      "replaces": "", 
      "description": "system territory as reported by sys.get_sys_info", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "system territory as reported by sys.get_sys_info", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_TERRITORY"
    }, 
    {
      "replaces": "", 
      "description": "android build fingerprint", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "android build fingerprint", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_ANDROID_BUILD_FINGERPRINT"
    }, 
    {
      "replaces": "", 
      "description": "The max number of sysfields.", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "The max number of sysfields.", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.SYSFIELD_MAX"
    }, 
    {
      "replaces": "", 
      "description": "The max number of user fields.", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "The max number of user fields.", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.USERFIELD_MAX"
    }, 
    {
      "replaces": "", 
      "description": "The max size of a single user field.", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "The max size of a single user field.", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "VARIABLE", 
      "name": "crash.USERFIELD_SIZE"
    }
  ]
}