{
  "info": {
    "group": "DEFOLD SDK", 
    "description": "API for platform independent mutex synchronization primitive.", 
    "namespace": "dmConditionVariable", 
    "brief": "SDK Condition Variable API documentation", 
    "file": "dmsdk/dlib/condition_variable.h", 
    "path": "engine/dlib/src/dmsdk/dlib/condition_variable.h", 
    "name": "Condition Variable"
  }, 
  "elements": [
    {
      "replaces": "", 
      "description": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">typedef</span> <span class=\"k\">struct</span> <span class=\"n\">ConditionVariable</span><span class=\"o\">*</span> <span class=\"n\">HConditionVariable</span><span class=\"p\">;</span>\n</pre></div>", 
      "parameters": [], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "HConditionVariable type definition", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "TYPEDEF", 
      "name": "dmConditionVariable::HConditionVariable"
    }, 
    {
      "replaces": "", 
      "description": "Create a new HConditionVariable", 
      "parameters": [], 
      "returnvalues": [
        {
          "doc": "A new ConditionVariable handle.", 
          "name": "condition_variable", 
          "types": [
            "dmConditionVariable::HConditionVariable"
          ]
        }
      ], 
      "notes": [], 
      "brief": "create condition variable", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "dmConditionVariable::New"
    }, 
    {
      "replaces": "", 
      "description": "Deletes a HConditionVariable.", 
      "parameters": [
        {
          "doc": "ConditionVariable handle to delete.", 
          "name": "mutex", 
          "types": [
            "dmConditionVariable::HConditionVariable"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "delete condition variable", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "dmConditionVariable::Delete"
    }, 
    {
      "replaces": "", 
      "description": "Wait for condition variable. This is a blocking function, and should be called with\nthe mutex being locked.", 
      "parameters": [
        {
          "doc": "ConditionVariable handle.", 
          "name": "condition", 
          "types": [
            "dmConditionVariable::HConditionVariable"
          ]
        }, 
        {
          "doc": "Mutex handle.", 
          "name": "mutex", 
          "types": [
            "dmMutex::HMutex"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "wait for condition variable", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "dmConditionVariable::Wait"
    }, 
    {
      "replaces": "", 
      "description": "Signal condition variable, effectively unblocks at least one of the waithing threads blocked\nby the condition variable.", 
      "parameters": [
        {
          "doc": "ConditionVariable handle.", 
          "name": "condition", 
          "types": [
            "dmConditionVariable::HConditionVariable"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "signal condition variable", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "dmConditionVariable::Signal"
    }, 
    {
      "replaces": "", 
      "description": "Broadcast condition variable, effectively unblocks all of the waithing threads blocked\nby the condition variable.", 
      "parameters": [
        {
          "doc": "ConditionVariable handle.", 
          "name": "condition", 
          "types": [
            "dmConditionVariable::HConditionVariable"
          ]
        }
      ], 
      "returnvalues": [], 
      "notes": [], 
      "brief": "broadcast condition variable", 
      "examples": "", 
      "members": [], 
      "error": "", 
      "tparams": [], 
      "type": "FUNCTION", 
      "name": "dmConditionVariable::Broadcast"
    }
  ]
}